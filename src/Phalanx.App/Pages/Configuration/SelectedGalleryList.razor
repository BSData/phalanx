@using WarHub.ArmouryModel.DataProviders
@using Phalanx.App.Pages.Management

@if (CatpkgGallery is { InfoCache: { Repositories: var repos } galleryInfo } gallery)
{
    <div>
        <FluentCard class="p-2">
            <FluentSearch Placeholder="Search Repositories" class="w-100 mt-2 mb-3" @bind-Value=@SearchText />
            <br />
            <FluentCheckbox>Show Pulled Repositories</FluentCheckbox>
            <FluentCheckbox @bind-Value=@ShowArchived>Show Archived Repositories</FluentCheckbox>
        </FluentCard>
        <hr />
        <div class="data-gallery">
            @foreach (var repo in RepositoryInfos)
            {
                <GalleryItem Repository="@repo" CatpkgGallery="@CatpkgGallery" />
            }
        </div>
    </div>
}
else
{
    <FluentProgressRing />
    <p>Loading catpkg gallery...</p>
}

@code {
    [Parameter]
    public CatpkgGalleryCache? CatpkgGallery { get; set; }

    bool ShowArchived { get; set; }

    string? SearchText { get; set; }

    IEnumerable<CatpkgRepositoryInfo> RepositoryInfos
    {
        get
        {
            return CatpkgGallery?.InfoCache?.Repositories
            ?.Where(x => ShowArchived || !(x.Archived ?? false))
            .Where(x => RepoMatchesSearch(x, SearchText))
            .OrderBy(x => x.Description)
            ?? Enumerable.Empty<CatpkgRepositoryInfo>();
        }
    }

    static bool RepoMatchesSearch(CatpkgRepositoryInfo info, string? text)
    {
        if (string.IsNullOrWhiteSpace(text))
        {
            return true;
        }
        return (info.Name?.Contains(text, StringComparison.OrdinalIgnoreCase) ?? true)
            || (info.Description?.Contains(text, StringComparison.OrdinalIgnoreCase) ?? true);
    }
}
