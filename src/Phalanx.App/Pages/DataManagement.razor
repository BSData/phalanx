@page "/datamanagement"

@using Phalanx.App.Pages.Configuration
@using Microsoft.Extensions.Options
@using WarHub.ArmouryModel.DataProviders

@inject GalleryHttpClient httpClient
@inject IOptions<GalleryBrowserOptions> options
@inject GalleryBrowserState state

<TitlePart>Data Management</TitlePart>
<h1>Data Management</h1>

<FluentSelect class="my-3" Items="@state.Cache.GalleryReferences" @bind-SelectedOption="@SelectedGalleryRef"
    @bind-SelectedOption:after="@SelectedGalleryRefChanged" OptionText="@(x => x?.Name)" />

@if (SelectedGalleryCache is not null)
{
    <SelectedGalleryList CatpkgGallery="@SelectedGalleryCache" />
}

@code {
    GalleryReference? SelectedGalleryRef { get; set; }

    async Task SelectedGalleryRefChanged()
    {
        if (SelectedGalleryRef is { } galleryRef)
        {
            await state.Cache.GetHydratedCatpkgGalleryCacheAsync(httpClient, galleryRef);
            StateHasChanged();
        }
    }

    private CatpkgGalleryCache? SelectedGalleryCache => SelectedGalleryRef is { } x ? state.Cache[x] : null;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        // add if not already existing
        foreach (var galleryRefDto in options.Value.DefaultGalleries)
        {
            var galleryRef = galleryRefDto.ToRecord();
            if (state.Cache[galleryRef] is null)
            {
                state.Cache.Upsert(new(galleryRef));
            }
        }
        SelectedGalleryRef = state.Cache.GalleryReferences.FirstOrDefault();
        await SelectedGalleryRefChanged();
    }
}