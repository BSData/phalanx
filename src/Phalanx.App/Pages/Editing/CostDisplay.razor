@using WarHub.ArmouryModel.Source
@using WarHub.ArmouryModel
@using WarHub.ArmouryModel.EditorServices

@if (Values != null)
{
    @* TODO - this needs to take either a Selection/Symbol/Node to iterate + display the 
    cost of the selection and all its children's costs (see if RosterOps for roster total has a Visitor for re-use) 
    E.g. Truck(15) with Machine Gun(2) should have a cost of 17, currently displaying 15 *@

    @for ( int i=0; i< Values.Length; i++)
    {
        var cost = Values[i];
        if (cost.Value != 0)
        {
            <div style="display: flex; gap: 1em;">
                <span>
                    <span>@cost.Value @cost.Name</span>

                    @if (cost != Values[^1])
                    {
                        <span>, </span>
                    }
                </span>
            </div>
        }
    }
}

@code {
    @* [Parameter]
    public ISelectionSymbol Selection { get; set; } = default!; *@


    [Parameter]

    public ImmutableArray<ICostSymbol> Values { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }
}



